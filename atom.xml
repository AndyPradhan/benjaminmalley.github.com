<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Clod Computing]]></title>
  <link href="http://BenjaminMalley.github.com/atom.xml" rel="self"/>
  <link href="http://BenjaminMalley.github.com/"/>
  <updated>2013-02-22T20:22:24+00:00</updated>
  <id>http://BenjaminMalley.github.com/</id>
  <author>
    <name><![CDATA[Benjamin Malley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gnome Shell]]></title>
    <link href="http://BenjaminMalley.github.com/blog/2011/11/11/gnome-shell/"/>
    <updated>2011-11-11T18:53:00+00:00</updated>
    <id>http://BenjaminMalley.github.com/blog/2011/11/11/gnome-shell</id>
    <content type="html"><![CDATA[<p>I was never a huge fan of Gnome pre-Shell, preferring any of XFCE for the resource utilization, KDE for the robust feature set and more attractive UI and especially Windows, which I think is still the one to beat (take that, OS X!). After just two days of use, I&#8217;m convinced Gnome Shell changes all that. After hearing talk of &#8220;Activities&#8221;, I went in expecting needless complexity and found instead a UI that manages to reduce all of the cruft that&#8217;s accumulated over years of GUI development into a focused, minimal experience while improving functionality and aesthetics. After just a week with Gnome 3.2, I&#8217;m totally sold.</p>

<p>It&#8217;s important to note that from a strict functionality perspective, Gnome Shell doesn&#8217;t break any new ground. There are no totally new UI paradigms, just some of the best ideas in desktop UI &#8211; Expose, Aero Snap, multiple desktops, search &#8211; brought together as a cohesive whole. The key breakthrough, if such it can be called, of Gnome Shell is that instead of launching each of these pieces of UI separately, the Activities view launches them all at once. It&#8217;s actually quite brilliant.
This cohesive design makes for a rather minimal experience &#8211; so minimal that Activities is almost the only piece of UI, which has one remarkable benefit: you can&#8217;t go to the wrong menu or hit the wrong key because it simply isn&#8217;t there. If you&#8217;re working in an application and you want to switch to something else, what you need to do is hit the Activities key. Need to switch to a different Window? Hit the Activities key. Need to open a new application? Hit the Activities key. Need to do a quick Google search? Hit the Activities key. There&#8217;s more, but I&#8217;m sure you get it. For as long as we&#8217;ve had desktop UI, it&#8217;s almost mind-boggling that someone didn&#8217;t come up with this earlier.</p>

<p>One drawback is that I found myself spending my first day with Gnome Shell actively looking for other UI components because there&#8217;s a constant feeling of &#8220;this can&#8217;t be all there is.&#8221; But, for the most part, what you see is what you get. One notable exception is the system shutdown menu item which requires a special keypress to reveal. I ended up having to search Google before I could shut down my machine, which is weird.</p>

<p>System configuration is probably the one place where the minimalist approach fails. I&#8217;m not sure if the system settings application is the end process of some design goal or merely a work in progress, but either way it&#8217;s lacking. I had to install a 3rd party application to change some horrible font defaults and I still haven&#8217;t found a way to make web searches default to Google instead of Wikpedia. Still, even if Gnome&#8217;s designers decide not to support more advanced configuration options, I think it&#8217;s inevitable that the 3rd party tools will get better and mitigate the need for official support. I mean, it is still Linux, right?</p>

<p>The next big thing in desktop environments is obviously going to be touch UI and, of course, how touch and mouse and keyboard will coexist and Gnome Shell is clearly designed with this in mind. Microsoft has also revealed their hand with Windows 8, which will essentially be two different experiences in one: a touch-friendly Metro experience alongside the traditional Windows desktop. In contrast, the Gnome team is solving this problem by redesigning individual applications for full-screen touch UI, the first of which are expected in 3.4. The crucial difference is that with Gnome&#8217;s approach, non-touch applications, like, say, Gimp, will inhabit the same space as touch apps.</p>

<p>Based on what I&#8217;ve seen of both approaches, I think Gnome will get there first. Because of the focus on individual applications they neatly avoid the problem of unifying the touch and non-touch experiences. There&#8217;s a cost though, in that Microsoft&#8217;s touch experience is shaping up to be really first rate, which I think is possible precisely because they are separating it out from the traditional desktop. With Gnome, I get a sense that touch will be supported, but not necessarily catered to. Ultimately, the jury&#8217;s out on what kind of support for touch Gnome will have and how that&#8217;ll affect the overall experience, but I&#8217;m certainly paying attention.</p>

<p>Honestly, this is the first time the design of an open source project has really wowed me. Gnome might not win any OS X converts with Shell but it&#8217;s about time there&#8217;s a UI on Linux that&#8217;s good instead of good enough.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing Debian Wheezy on an encrypted LVM with Windows dual-boot]]></title>
    <link href="http://BenjaminMalley.github.com/blog/2011/01/03/installing-debian-wheezy-on-an-encrypted-lvm-with-windows-dual-boot/"/>
    <updated>2011-01-03T20:13:00+00:00</updated>
    <id>http://BenjaminMalley.github.com/blog/2011/01/03/installing-debian-wheezy-on-an-encrypted-lvm-with-windows-dual-boot</id>
    <content type="html"><![CDATA[<h3>UPDATE: I&#8217;ve confirmed that this issue is no longer present in the latest version of Debian testing for x86-64.</h3>

<p>For a while now, Debian&#8217;s intaller has supported the Linux Logical Volume Manager, which allows you to replace your partitions with logical volumes that can be resized or extended with additional disks easily.  You can find out more about the benefits of LVM on Wikipedia.  The Debian installer provides a number of automated options for a whole disk LVM and encrypted LVM setup, but if, for example, you want to dual boot Windows off of the same disk, you&#8217;re going to need to get your hands dirty.</p>

<p>For the most part, I followed <a href="http://www.linuxbsdos.com/2011/05/10/how-to-install-ubuntu-11-04-on-an-encrypted-lvm-file-system/">this guide</a>, which is for Ubuntu and doesn&#8217;t discuss dual-booting, but was nonetheless useful. At least until I got to the final step. After selecting Finish partitioning and write changes to disk, I got a warning message informing me that the installer could not continue because there was unsafe swap space detected.</p>

<p>So what happened? Because I encrypted the entire volume group, rather than encrypting each logical volume group separately, the installer was unable to detect that the swap volume was, in fact, encrypted. Now having an unencrypted swap space is, in face, insecure, but the refusal of the installer to proceed from this felt silly. Even if I was setting up unencrypted swap (which I wasn&#8217;t), it&#8217;s my computer. Let me do it. Warn me, for sure, but let me do it.</p>

<p>How to proceed from this show stopper? I could re-encrypt the swap space at the logical volume level, but I would be prompted for yet another password every time I booted up, which wouldn&#8217;t be ideal. Plus, I have an aversion to unnecessarily complicated setups. So I went back into the partitioning menu and killed my swap space by selecting &#8220;do not use&#8221; and then I proceeded with the install.</p>

<p>Debian threw up some warnings about the dangers of installing without swap, but having 4 GB of ram on the machine, so I wasn&#8217;t too concerned. Unlike with the unsafe swap space error, this didn&#8217;t prevent me from moving forward.  So I selected my install packages and booted into the new OS.</p>

<p>From here, adding a swap volume is a relatively straightforward affair. You can get detailed information about your logical volumes like so:
vgdisplay -v vg01</p>

<p>If you&#8217;re following along at home, change vg01 to whatever you&#8217;ve named your volume group. vgdisplay lists all of the logical volumes under that volume group. Each entry begins with LV Name, which is that logical volume&#8217;s name. I had an entry for /dev/vg01/swap, which was the logical volume I had set aside for swap but wasn&#8217;t using. Those names will of course be different on every system, so all of the following commands should be changed to reflect that. I set up a new swap volume:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkswap -c /dev/vg01/swap</span></code></pre></td></tr></table></div></figure>


<p>Now I&#8217;ve got a swap volume, but it&#8217;s not being used. I can verify this with free -m. The last line shows 0 available swap space:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Swap: 0 0 0</span></code></pre></td></tr></table></div></figure>


<p>I could enable it by typing swapon /dev/vg01/swap, but I&#8217;d have to re-enable it every time I boot up. In order to enable the swap permanently, I edited /etc/fstab, the filesystem table to include my new swap volume:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/dev/mapper/vg01-swap swap swap defaults 0 0</span></code></pre></td></tr></table></div></figure>


<p>Here, the second and third entries refer to the mount point and filesystem type respectively and should both be swap, regardless of the logical volume label. Reboot the system and you&#8217;re done. After system boot, I typed free -m again to verify the change:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Swap: 3811 0 3811</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
</feed>
